[{"E:\\react-bootcamp\\react-course\\src\\index.js":"1","E:\\react-bootcamp\\react-course\\src\\App.js":"2","E:\\react-bootcamp\\react-course\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":2365,"mtime":1611321101423,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"6wsg04",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"E:\\react-bootcamp\\react-course\\src\\index.js",[],["16","17"],"E:\\react-bootcamp\\react-course\\src\\App.js",["18"],"import React from 'react';\nimport logo from './btm.jpg';\nimport './App.css';\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      newItem:\"\",\n      list:[]\n    }\n  }\n  addItem(todoValue){\n    if(todoValue!==\"\"){\n      const newItem = {\n        id:Date.now(),\n        value:todoValue,\n        isDone:false\n      }\n      const list = [...this.state.list]\n      list.push(newItem)\n\n      this.setState({\n        list,\n        newItem:\"\"\n      })\n    }\n  }\n  deleteItem(id){\n    const list = [...this.state.list]\n    const updatedList = list.filter(item=>item.id!==id)\n    this.setState({list:updatedList})\n  }\n\n  updateInput(input){\n    this.setState({newItem:input})\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\"><img src={logo} width=\"25%\" className=\"App-logo\" /></header>\n\n          <div className=\"title\">Add a todo...<br/>\n              <input \n              type=\"text\"\n              className=\"addTodo\"\n              onClick={()=>this.addItem(this.state.newItem)}\n              name=\"todo\"\n              // disabled={!this.state.newItem.length}\n              placeholder=\"add todo...\"\n              required\n              value={this.state.newItem}\n              onChange={e=>this.updateInput(e.target.value)}\n              />\n            \n              <button \n              disabled={!this.state.newItem.length}\n              className=\"addButton\">Add Todo</button>\n              <ul className=\"list-items\">\n              {this.state.list.map(item=>{\n                return(\n                  <li key={item.id}>\n                  <input type=\"checkbox\"\n                  name=\"idDone\"\n                  checked={item.isDone}\n                  onChange = {()=>{}}\n                   />\n                   {item.value}\n                   <button \n                   className=\"delete\"\n                   onClick={()=>this.deleteItem(item.id)}\n                   >\n                   Delete</button>\n                  </li>\n\n\n                )\n              })}\n                  <input type=\"checkbox\" \n                  name=\"check\" \n                  className=\"tick-box\" />\n                  fucking all day work\n                  <button className=\"delete\">Delete</button>\n              </ul>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","E:\\react-bootcamp\\react-course\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":43,"column":42,"nodeType":"25","endLine":43,"endColumn":93},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]